#!/usr/bin/env python
import sys
import argparse
import re
import os

parser = argparse.ArgumentParser(description="""Rename file(s) easily.
Select by RegEx captured group and output with string format.

EXAMPLES:
Add leading zeros:
$ _rename --regex '(\\d+)' --format '%02d' 1.txt
#=> 01.txt

Dry run without affecting your files:
$ _rename --regex '(\\d+)' --format '%02d' 1.txt --dry-run

Add leading zeros in batch:
$ ls *.txt | _rename -e '(\\d+)' -f '%02d'


Change extensions: #TODO
""",
                                 formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument("-e",
                    "--regex",
                    required=True,
                    help="Regex used for extracting group from source filename")

parser.add_argument("-f",
                    "--format",
                    required=True,
                    help="Formatting string used for renamed group in filename")

parser.add_argument("-d",
                    "--dry-run",
                    action='store_true',
                    help="""See how command affects your file without executing it""")


parser.add_argument("filename",
                    nargs='?',
                    type=str,
                    help="File name")

args = parser.parse_args()


def format(m, style) -> str:
    """Format captured group provided a format string.
    It naively figures out the captured group's type to do conversion.
    """
    captured = m.group(0)
    if style[-1] == 'd':
        captured = int(captured)
    elif style[-1] == 'f':
        captured = float(captured)
    return style % captured


def convert(filename, dry_run=False):
    """Do the conversion for one file.
    """
    if not os.path.isfile(filename):
        sys.stderr.write("ERROR: {} not found.".format(filename))
        sys.exit(1)
    new_filename = re.sub(args.regex, lambda m: format(m, args.format), filename)
    if dry_run:
        print("{} -> {}".format(filename, new_filename))
    else:
        os.rename(filename, new_filename)


if args.dry_run:
    print("DRY RUN:")

if args.filename:
    convert(args.filename, args.dry_run)
else:
    for filename in sys.stdin:
        convert(filename.strip(), args.dry_run)
