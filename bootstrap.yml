- name: zsh
  hosts: all
  tags: zsh
  vars:
    - home_dir: "{{ lookup('env', 'HOME') }}"
  tasks:
    - name: install zsh
      become: yes
      package:
        name: zsh
        state: present
    - name: change default shell
      command:
        cmd: chsh -s /bin/zsh
    # - name: install Zim
    #   command: curl -fsSL https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh
    - name: necessary export
      lineinfile:
        dest: "{{ home_dir }}/.zshrc"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^export EDITOR=", line: "export EDITOR=vim" }

- name: fzf
  hosts: all
  tags: fzf
  vars:
    - home_dir: "{{ lookup('env', 'HOME') }}"
  tasks:
    - name: binding fzf with Ctrl-R
      lineinfile:
        dest: "{{ home_dir }}/.zshrc"
        regexp: "^# fzf"
        line: >-

          # fzf

          if [ -n "${commands[fzf-share]}" ]; then
            source "$(fzf-share)/key-bindings.zsh"
            source "$(fzf-share)/completion.zsh"
          fi


- name: Git
  hosts: all
  tags: git
  become: yes
  tasks:
    - name: install git
      package:
        name: git
        state: present
    - name: setup Name, Email and Editor
      command: "{{ item }}"
      with_items:
        - git config --global user.email "hiepph@tuta.io"
        - git config --global user.name "Hiep Pham"
        - git config --global core.editor "vim"

- name: Emacs
  hosts: all
  tags: emacs
  become: yes
  tasks:
    - name: Install emacs
      package:
        name: emacs
        state: present
        update_cache: true

- name: Locales
  hosts: all
  tags: locale
  become: yes
  tasks:
    - name: US localization
      shell: localedef -f UTF-8 -i en_US en_US.UTF-8

- name: ibus
  hosts: all
  tags: ibus
  become: yes
  tasks:
    - name: install ibus
      package:
        name: ibus,ibus-unikey
        state: present
    - name: make sure to use appropriate python to open ibus
      lineinfile:
        dest: /usr/bin/ibus-setup
        regexp: /usr/share/ibus/setup/main.py
        line: exec /usr/bin/python3 /usr/share/ibus/setup/main.py $@

- name: SSH
  hosts: all
  gather_facts: no
  become: yes
  tags: ssh
  handlers:
    - name: restart ssh
      service: name=sshd state=restarted

  tasks:
    - name: enable sshd
      service: name=sshd state=started enabled=yes
    - name: update ssh configuration to be more secure
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -t -f %s'
      with_items:
        - regexp: "^PermitRootLogin"
          line: "PermitRootLogin no"
        - regexp: "^Port"
          line: "Port 2406"
      notify: restart ssh

- name: Python
  hosts: all
  gather_facts: no
  tags: python
  vars:
    - miniconda_home: "{{ lookup('env', 'HOME') }}/miniconda"
  tasks:
    - name: get miniconda installer
      get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh
        dest: /tmp/miniconda.sh
        mode: 0755
    - name: install miniconda
      shell: "/tmp/miniconda.sh -b -p {{ miniconda_home }} creates={{ miniconda_home }}"
    - name: initialize the shell
      shell: "conda init $SHELL"
    - name: remove env prompt in command line
      shell: conda config --set env_prompt ""
