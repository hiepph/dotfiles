- hosts: local
  name: Install miniconda
  tags:
    - conda
  vars:
    - home_dir: "{{ lookup('env', 'HOME') }}"
    - download_dir: "{{ home_dir }}/Downloads"
    - conda_dir: "{{ home_dir }}/miniconda3"
    - conda_version: "py38_4.11.0"
    - conda_checksum: "sha256:e13a4590879638197b0c506768438406b07de614911610e314f8c78133915b1c"
  tasks:
    - debug:
        msg: "{{ conda_dir }}"
    - name: check for installation of conda
      stat:
        path: "{{ conda_dir }}/bin/conda"
      register: conda_bin
    - name: check if installation file existed
      stat:
        path: "{{ download_dir }}/Miniconda3-{{ conda_version }}-MacOSX-x86_64.sh"
      register: downloaded_file

    - name: Download installation file
      get_url:
        url: "https://repo.anaconda.com/miniconda/Miniconda3-{{ conda_version }}-MacOSX-x86_64.sh"
        dest: "{{ download_dir }}/Miniconda3-{{ conda_version }}-MacOSX-x86_64.sh"
        checksum: "{{ conda_checksum }}"
      register: installation_file
      when:
        - not conda_bin.stat.exists
        - not downloaded_file.stat.exists

    - name: installing...
      command: "bash {{ downloaded_file.stat.path }} -b -p {{ conda_dir }}"
      args:
        creates: "{{ conda_dir }}"
      when:
        - not conda_bin.stat.exists
        - downloaded_file.stat.exists


- hosts: all
  name: install essential packages
  tags:
    - packages
  vars:
    - conda_env: 'base'
  pre_tasks:
    - name: get current environment
      shell: echo $CONDA_DEFAULT_ENV
      register: current_conda_env
    - name: check current environment
      fail:
        msg: The conda environment must be '{{ conda_env }}'
      when: current_conda_env.stdout != conda_env
  tasks:
    - name: testing tool
      pip:
        name: pytest
      changed_when: current_conda_env
    - name: Python linter \& formatter
      pip:
        name: black
    - name: collaborative cheatsheets for console commands
      pip:
        name: tldr
    - name: Docker compose
      pip:
        name: docker-compose
